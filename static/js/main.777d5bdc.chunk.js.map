{"version":3,"sources":["Store.js","components/LoadingScreen.js","components/Nav.js","components/StorageInfo.js","components/DownloadItem.js","components/DownloadInProgress.js","routes/DownloadManager.js","routes/Home.js","components/MediaItem.js","routes/MediaBrowser.js","routes/MediaPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","initialState","isInit","isSupported","videos","dbIndex","reducer","state","action","type","Object","objectSpread","LoadingScreen","react_default","a","createElement","className","style","height","role","Nav","_ref","routes","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","_useState3","_useState4","isOnline","setIsOnline","setIsOnlineTrue","setIsOnlineFalse","useEffect","window","navigator","onLine","addEventListener","removeEventListener","react_router_dom","exact","to","aria-expanded","aria-label","onClick","concat","map","_ref2","key","label","path","activeClassName","disabled","getStorageEstimate","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","storage","estimate","then","quota","usage","Math","round","stop","apply","this","arguments","StorageInfo","storageInfo","setStorageInfo","storageEstimateInterval","setInterval","clearInterval","marginTop","width","aria-valuenow","aria-valuemin","aria-valuemax","DownloadItem","id","removeMedia","title","downloadedOn","DownloadInProgress","dateStarted","progress","marginBottom","DownloadManager","_useContext","useContext","dispatch","content","downloadInProgress","setDownloadInProgress","newDbIndex","list","sent","updateList","handleProgressEvent","event","detail","_callee2","offlineUri","_context2","remove","_x","debounced","useRef","debounce","_callee3","_context3","current","react","components_DownloadInProgress","appMetadata","downloaded","reverse","_ref4","index","components_DownloadItem","done","components_StorageInfo","max","Home","MediaItem","onClickDownload","poster","tagline","background","src","alt","minHeight","opacity","borderRadius","MediaBrowser","history","searchTerm","setSearchTerm","paddingBottom","placeholder","onChange","e","target","value","filter","video","includes","components_MediaItem","assign","videoId","getStoreInProgress","alert","find","v","confirm","store","manifestUri","Date","push","downloadVideo","MediaPlayer","match","videoEl","metadata","params","videoElement","player","attach","mode","load","offlineVideo","detach","goBack","aria-hidden","ref","maxHeight","controls","autoPlay","App","init","isShakaPlayerSupported","isShakaStorageSupported","onError","progressCallback","_ref3","shaka","polyfill","installAll","Player","isBrowserSupported","offline","Storage","support","error","console","code","dispatchEvent","CustomEvent","configure","preferredAudioLanguage","preferredTextLanguage","Promise","all","fetch","response","json","onUpdate","scrollTo","components_Nav","paddingTop","react_router","component","components_LoadingScreen","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onSuccess","catch","ReactDOM","render","children","_useReducer","useReducer","_useReducer2","Provider","src_App","document","getElementById","URL","process","href","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.777d5bdc.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  isInit: false,\n  isSupported: true,\n  videos: [],\n  dbIndex: [],\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT_DONE':\n      return {\n        ...state,\n        isInit: action.isInit,\n        isSupported: action.isSupported,\n        videos: action.videos,\n        dbIndex: action.dbIndex,\n      };\n    case 'UPDATE_DB_INDEX':\n      return {\n        ...state,\n        dbIndex: action.dbIndex,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <Store.Provider value={value}>\n      {children}\n    </Store.Provider>\n  );\n};\n\n","import React from \"react\";\n\nconst LoadingScreen = () => (\n  <div className=\"container\" style={{ height: '100vh' }}>\n    <div className=\"row h-100 justify-content-center align-items-center\">\n      <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default LoadingScreen;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = ({ routes }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOnline, setIsOnline] = useState(false);\n\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => {\n    setIsOnline(window.navigator.onLine);\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n\n    return () => {\n      window.removeEventListener('online', setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    }\n  }, []);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\n      <NavLink\n        className=\"navbar-brand\"\n        exact\n        to=\"/\"\n      >\n        Shaka-O-Matik\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className={`collapse navbar-collapse ${isOpen ? 'show': ''}`}>\n        <div className=\"navbar-nav\">\n          {routes.map(({\n            exact,\n            key,\n            label,\n            path,\n          }) => (\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-item nav-link\"\n              exact={exact}\n              key={key}\n              onClick={() => setIsOpen(false)}\n              to={path}\n            >\n              {label}<span className=\"sr-only\">(current)</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>\n      {isOnline\n        ? <button type=\"button\" className=\"btn btn-success\" disabled>Online</button>\n        : <button type=\"button\" className=\"btn btn-danger\" disabled>Offline</button>\n      }\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\n\nconst getStorageEstimate = async () => {\n  return navigator.storage.estimate().then(({ quota, usage }) => ({ quota: Math.round(quota/1000000), usage: Math.round(usage/1000000) }));\n}\n\nconst StorageInfo = () => {\n  const [storageInfo, setStorageInfo] = useState({ usage: 0, quota: 100 })\n\n  useEffect(() => {\n    // AFAIK it's impossible to listen to 'storage' events on the same page.\n    // These events are only fire if changes are made to indexedDB in another tab,\n    // so I just added an interval to check the storage estimate every x seconds.\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const storageEstimateInterval = setInterval(() => {\n        getStorageEstimate().then(setStorageInfo);\n      }, 5000);\n      getStorageEstimate().then(setStorageInfo);\n      return () => clearInterval(storageEstimateInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"card\" style={{ marginTop: '1rem' }}>\n      <div className=\"card-body\">\n        You have {storageInfo.quota}MB of accessible storage and currently use {storageInfo.usage}MB.\n        <div className=\"progress\" style={{ height: '2rem' }}>\n          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: `${storageInfo.usage/storageInfo.quota*100}%` }} aria-valuenow={storageInfo.usage} aria-valuemin=\"0\" aria-valuemax={storageInfo.quota}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StorageInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst DownloadItem = ({\n  id,\n  removeMedia,\n  title,\n  downloadedOn\n}) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>{downloadedOn}</small>\n    <hr />\n    <div className=\"d-flex justify-content-between\">\n      <NavLink\n        className=\"btn btn-primary\"\n        to={`/offline/${id}`}\n      >Watch</NavLink>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={removeMedia}\n      >Remove</button>\n    </div>\n  </li>\n);\n\nDownloadItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  removeMedia: PropTypes.func.isRequired,\n};\n\nexport default DownloadItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DownloadInProgress = ({ title, dateStarted, progress }) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>{dateStarted}</small>\n    <hr />\n    <div className=\"progress\" style={{ marginBottom: '0.5rem' }}>\n      <div\n        className=\"progress-bar progress-bar-striped progress-bar-animated\"\n        role=\"progressbar\"\n        aria-valuenow={progress * 100}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        style={{ width: `${progress * 100}%` }}\n      />\n    </div>\n  </li>\n);\n\nDownloadInProgress.propTypes = {\n  title: PropTypes.string.isRequired,\n  dateStarted: PropTypes.string.isRequired,\n  progress: PropTypes.number.isRequired,\n}\n\nexport default DownloadInProgress;\n","import React, {\n  Fragment,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport { Store } from '../Store';\nimport StorageInfo from '../components/StorageInfo';\nimport DownloadItem from '../components/DownloadItem';\nimport DownloadInProgress from '../components/DownloadInProgress';\n\nconst DownloadManager = () => {\n  const { state, dispatch } = useContext(Store);\n  const { dbIndex } = state;\n  const [downloadInProgress, setDownloadInProgress] = useState({ content: null, progress: 0 });\n  const { content, progress } = downloadInProgress;\n\n  useEffect(() => {\n    const updateList = async () => {\n      const newDbIndex = await window.storage.list();\n      dispatch({ type: 'UPDATE_DB_INDEX', dbIndex: newDbIndex });\n    };\n    updateList();\n  }, [dispatch]);\n  \n  const handleProgressEvent = event => {\n    setDownloadInProgress(event.detail);\n  };\n  \n  useEffect(() => {\n    window.addEventListener('storage-progress', handleProgressEvent);\n    return () => { // clean up when unmounting\n      window.removeEventListener('storage-progress', handleProgressEvent);\n    };\n  }, []);\n\n  const removeMedia = async (offlineUri) => {\n    await window.storage.remove(offlineUri);\n    const newDbIndex = await window.storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', dbIndex: newDbIndex });\n  };\n  \n  const debounced = useRef(debounce(async () => {\n    // todo this can happen even if the component is not mounted\n    // this should reload the list of downloads after the progress updates have ceased\n    setDownloadInProgress({\n      content: null,\n      progress: 0,\n    });\n    const newDbIndex = await window.storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', dbIndex: newDbIndex });\n  }, 1000));\n\n  useEffect(() => {\n    content && debounced.current();\n  });\n\n  return (\n    <Fragment>\n      <ul className=\"list-group\">\n        {content &&\n          <DownloadInProgress title={content.appMetadata.title} progress={progress} dateStarted={content.appMetadata.downloaded} />}\n        {dbIndex.reverse().map(({ appMetadata, offlineUri }, index) => (\n          <DownloadItem\n            title={appMetadata.title}\n            key={`download_${index}_${appMetadata.title}`}\n            done\n            id={appMetadata.id}\n            removeMedia={() => removeMedia(offlineUri)}\n            downloadedOn={appMetadata.downloaded}\n          />\n        ))}\n      </ul>\n      <StorageInfo max={2000} current={500} />\n    </Fragment>\n  );\n};\n\nexport default DownloadManager;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"jumbotron\">\n    <h1>Hello, world!</h1>\n    <p className=\"lead\">This is an App that demonstates offline storage and playback of videos with the Shaka player.</p>\n    <hr />\n      <p>There are many bugs and few features.</p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MediaItem = ({\n  id,\n  onClickDownload,\n  poster,\n  tagline,\n  title,\n}) => (\n  <div className=\"col-md-6\" style={{ marginBottom: '1rem' }}>\n    <div className=\"card bg-dark text-white\" style={{ background: 'black' }}>\n      <img\n        className=\"card-img-top\"\n        src={poster}\n        alt={`image_${title}`}\n        style={{ minHeight: '10rem', opacity: '0.4', borderRadius: '.25rem' }}\n      />\n      <div className=\"card-img-overlay d-flex justify-content-between flex-column\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{tagline}</p>\n        <div className=\"text-right\">\n          <div className=\"btn-group\" role=\"group\">\n            <button\n              className=\"btn btn-secondary\"\n              onClick={onClickDownload}\n              type=\"button\"\n            >\n              Download\n            </button>\n            <NavLink\n              className=\"btn btn-primary\"\n              exact\n              role=\"button\"\n              to={`/stream/${id}`}\n            >Watch now!</NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nMediaItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  tagline: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  onClickDownload: PropTypes.func.isRequired,\n};\n\nexport default MediaItem;\n","import React, { Fragment, useContext, useState } from 'react';\nimport { Store } from '../Store';\nimport MediaItem from '../components/MediaItem';\n\nconst MediaBrowser = ({ history }) => {\n  const { state } = useContext(Store);\n  const { videos, dbIndex } = state;\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const downloadVideo = (videoId) => {\n    if (!window.storage.getStoreInProgress()) { // only one download at a time with shaka\n      if (dbIndex.find(v => v.appMetadata.id === videoId)) { // check if already in storage\n        if (!window.confirm('Are you sure you want download this again?')) {\n          return;\n        }\n      }\n      const video = videos.find(v => v.id === videoId);\n      window.storage.store(video.manifestUri, {\n        downloaded: Date(),\n        id: video.id,\n        title: video.title,\n      });\n      history.push('/downloads');\n    } else alert('Download already in Progress!');\n  };\n\n  return (\n    <Fragment>\n      <form className=\"input-group\" style={{ paddingBottom: '1rem' }}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={e => setSearchTerm(e.target.value)}\n          value={searchTerm}\n        />\n        {searchTerm && <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => setSearchTerm('')}\n          >\n            Clear\n          </button>\n        </div>}\n      </form>\n      <div className=\"row\">\n        {videos.filter(video => video.title.includes(searchTerm)).map((video, index) => (\n          <MediaItem\n            {...video}\n            key={`media_${index}_${video.title}`}\n            onClickDownload={() => downloadVideo(video.id)}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MediaBrowser;\n","import React, { useEffect, useRef, useContext } from 'react';\nimport { Store } from '../Store';\n\nconst MediaPlayer = ({ match, history }) => {\n  const videoEl = useRef(null); // reference to the <video> element\n\n  const { state } = useContext(Store);\n  const { videos } = state;\n  const metadata = videos.find((video => video.id === match.params.id)); // get id from URL, metadata from datastore\n\n  useEffect(() => {\n    // make linter happy\n    const videoElement = videoEl.current;\n    // attach player to video tag\n    window.player.attach(videoElement);\n\n    if (match.params.mode === 'stream') {\n      window.player.load(metadata.manifestUri); // maybe I should catch errors here TODO\n    } else { // mode === 'offline'\n      // get offlineUri from storage\n      window.storage.list().then((list) => {\n        const offlineVideo = list.find(video => video.appMetadata.id === match.params.id);\n        window.player.load(offlineVideo.offlineUri);\n      });\n    }\n    return () => {\n      // detach player from element when component unmounts\n      window.player.detach(videoElement);\n    };\n  }, [match, metadata]); // run this effect only when it is first mounted or these values change\n\n  return (\n    <div className=\"card bg-light\">\n      <div className=\"card-header\">\n        {metadata ? metadata.title : '404'}\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={history.goBack}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"card-body\">\n        {metadata ? (\n          <video\n            ref={videoEl}\n            style={{ width: '100%', maxHeight: '80vh' }}\n            poster={metadata.poster}\n            controls\n            autoPlay\n          />\n        ) : 'Video not found.'}\n      </div>\n    </div>\n  );\n};\n\nexport default MediaPlayer;\n","import React, { useEffect, useContext, Fragment } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport shaka from 'shaka-player';\nimport { Store } from './Store';\nimport LoadingScreen from './components/LoadingScreen';\nimport Nav from './components/Nav';\nimport DownloadManager from './routes/DownloadManager';\nimport Home from './routes/Home';\nimport MediaBrowser from './routes/MediaBrowser';\nimport MediaPlayer from './routes/MediaPlayer';\n\nconst routes = [\n  {\n    exact: true,\n    key: 'media',\n    label: 'Media',\n    path: '/media',\n  },\n  {\n    exact: true,\n    key: 'downloads',\n    label: 'Downloads',\n    path: '/downloads',\n  },\n];\n\nconst App = () => { \n  const { state, dispatch } = useContext(Store);\n  const { isInit, isSupported } = state;\n\n  const init = async () => {\n    // init shaka\n    shaka.polyfill.installAll();\n\n    const isShakaPlayerSupported = shaka.Player.isBrowserSupported();\n    const isShakaStorageSupported = shaka.offline.Storage.support();\n\n    if (isShakaPlayerSupported && isShakaStorageSupported) {\n      // initialize shaka player, not attached to video element for now\n      window.player = new shaka.Player();\n\n      // initialize shaka storage\n      window.storage = new shaka.offline.Storage(window.player);\n\n      // log errors\n      const onError = (error) => {\n        console.error('Error code', error.code, 'object', error);\n      };\n      window.player.addEventListener('error', ({ detail }) => onError(detail));\n\n      // make shaka dispatch progress events so that we can have a progress bar when downloading\n      const progressCallback = (content, progress) => window.dispatchEvent(new CustomEvent(\"storage-progress\", { detail: { content, progress }}));\n      window.player.configure({\n        offline: { progressCallback },\n        preferredAudioLanguage: 'en-US',\n        preferredTextLanguage: 'en-US',\n      });\n\n      // get available videos from server\n      // and check offline storage (IndexedDB)\n      // simultaneously (both are async)\n      const [videos, dbIndex] = await Promise.all([\n        fetch('data/videos.json').then(response => response.json()),\n        window.storage.list(),\n      ]);\n\n      // start app\n      return dispatch({\n        type: 'INIT_DONE',\n        videos,\n        isInit: true,\n        isSupported: isShakaPlayerSupported && isShakaStorageSupported,\n        dbIndex,\n      });\n    }\n\n    // not supported\n    return dispatch({\n      type: 'INIT_DONE',\n      videos: [],\n      isInit: true,\n      isSupported: false,\n      dbIndex: [],\n    });\n  };\n\n  useEffect(() => {\n    !state.isInit && init();\n  });\n\n\n  if (!isInit) return <LoadingScreen />;\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)}>\n      <div className=\"App\">\n        <Nav routes={routes} />\n        <main className=\"container\" style={{ paddingTop: '4.5rem' }}>\n          {!isSupported ? (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              <h4 className=\"alert-heading\">Browser not supported!</h4>\n              <hr />\n              Unfortunately your browser does not support all required technologies.\n            </div>\n          ) : (\n            <Fragment>\n              <Route\n                component={Home}\n                exact\n                path=\"/\"\n              />\n              <Route\n                component={MediaBrowser}\n                exact\n                path=\"/media\"\n              />\n              <Route\n                component={DownloadManager}\n                exact\n                path=\"/downloads\"\n              />\n              <Route\n                component={MediaPlayer}\n                exact\n                path=\"/:mode(stream|offline)/:id\"\n              />\n            </Fragment>\n          )}\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}